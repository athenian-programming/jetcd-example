buildscript {
    ext.atomicfu_version = '0.18.5'

    dependencies {
        classpath "org.jetbrains.kotlinx:atomicfu-gradle-plugin:$atomicfu_version"
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'org.jmailen.kotlinter' version "3.12.0" apply false
    id 'org.jetbrains.kotlin.jvm' version '1.7.21' apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.21' apply false
    id "com.github.ben-manes.versions" version "0.44.0" apply false
    id 'com.github.kt3k.coveralls' version '2.12.0' apply false
}

allprojects {
    group 'com.github.pambrose.etcd-recipes'
    version '0.9.22'

    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jmailen.kotlinter'
    apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'jacoco'
    apply plugin: 'com.github.kt3k.coveralls'
    apply plugin: 'kotlinx-atomicfu'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        google()
        mavenCentral()
        maven { url = "https://jitpack.io" }
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

subprojects {

    dependencies {
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"

        implementation "io.etcd:jetcd-all:$jetcd_version"
        implementation "com.google.guava:guava:$guava_version"
        implementation "com.github.pambrose.common-utils:core-utils:$utils_version"
        implementation "com.github.pambrose.common-utils:guava-utils:$utils_version"
        implementation "io.github.microutils:kotlin-logging:$logging_version"
        implementation "ch.qos.logback:logback-classic:$logback_version"

        testImplementation "org.amshove.kluent:kluent:$kluent_version"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }

        afterEvaluate {
            getClassDirectories().setFrom(files(classDirectories.files.collect {
                fileTree(dir: it,
                        excludes: ['io/etcd/recipes/examples/**'])
            }))
        }
    }

    check.dependsOn jacocoTestReport

    artifacts {
        archives sourcesJar
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += ['-Xbackend-threads=8',
                                 '-opt-in=kotlin.time.ExperimentalTime',
                                 '-opt-in=kotlin.ExperimentalUnsignedTypes',
            ]
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += ['-Xbackend-threads=8',
                                 '-opt-in=kotlin.time.ExperimentalTime',
                                 '-opt-in=kotlin.ExperimentalUnsignedTypes',
            ]
        }
    }

    test {
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
            showStandardStreams = true
        }
    }

    kotlinter {
        ignoreFailures = false
        reporters = ['checkstyle', 'plain']
        experimentalRules = false
        disabledRules = ["no-wildcard-imports",
                         "indent",
                         "final-newline",
                         "comment-spacing",
                         "max-line-length",
                         "no-multi-spaces",
                         "wrapping",
                         "multiline-if-else",
                         "filename",
                         "annotation-spacing",]
    }
}