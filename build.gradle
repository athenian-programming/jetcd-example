plugins {
  id 'java'
  id 'org.jetbrains.kotlin.jvm' version '1.3.60' apply false
  id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.60' apply false
  id "com.github.ben-manes.versions" version "0.27.0" apply false
  id 'jacoco'
  id 'com.github.kt3k.coveralls' version '2.8.4' apply false
}

repositories {
  mavenCentral()
  jcenter()
}

allprojects {

}

subprojects {
  apply plugin: 'org.jetbrains.kotlin.jvm'
  apply plugin: 'com.github.ben-manes.versions'

  group 'com.github.pambrose.etcd-recipes'
  version '0.9.17'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    maven { url "https://kotlin.bintray.com/kotlinx" }
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
  }

  ext {
    def kotlinVersion = '1.3.60'
    def serializationVersion = '0.13.0'
    def jetcdVersion = '0.4.1'
    def guavaVersion = '28.1-android'
    def utilsVersion = '1.1.5'
    def loggingVersion = '1.7.7'
    def slf4jVersion = '1.7.28'
    def kluentVersion = '1.57'
    def junitVersion = '5.5.2'

    libraries = [
        stdlib        : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
        reflect       : "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}",
        serialization : "org.jetbrains.kotlinx:kotlinx-serialization-runtime:${serializationVersion}",

        guava         : "com.google.guava:guava:${guavaVersion}",

        jetcd         : "io.etcd:jetcd-all:${jetcdVersion}",

        core_utils    : "com.github.pambrose.common-utils:core-utils:${utilsVersion}",
        guava_utils   : "com.github.pambrose.common-utils:guava-utils:${utilsVersion}",

        logging       : "io.github.microutils:kotlin-logging:${loggingVersion}",
        slf4j_simple  : "org.slf4j:slf4j-simple:${slf4jVersion}",

        kluent        : "org.amshove.kluent:kluent:$kluentVersion",

        jupiter_api   : "org.junit.jupiter:junit-jupiter-api:$junitVersion",
        jupiter_engine: "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    ]
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  sourceSets {
    main {
      java {
        srcDirs 'src/main/java'
        srcDirs 'src/main/kotlin'
      }
    }
  }

  jacocoTestReport {
    reports {
      xml.enabled = true // coveralls plugin depends on xml format report
      html.enabled = true
    }
  }

}

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


